/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animacion2;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Asus
 */
public class Lienzo extends javax.swing.JPanel implements Runnable{

    /**
     * Creates new form Lienzo
     */
    Pelota p;
    Raqueta r;
    Ladrillo[][] muro;
    Thread hilo;
    Graphics g;
    String grafico="original";
    int puntuacion=0;
    public Lienzo() {
        initComponents();
        Random random=new Random();       
        
        p=new Pelota(100, 100, 30, 30, Color.RED,-10,10);
        //[698, 458
        r=new Raqueta((698-150)/2,458-25 ,150, 25);
        muro=generarMuro(9,6, 50, 25);
        
        hilo=new Thread(this);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paint(Graphics g) {
        update(g);
    }
    
    @Override
    public void update(Graphics g){
        if(grafico.equals("original")){
            g.setColor(Color.WHITE);
            g.fillRect(0, 0,getWidth(), getHeight());       
            p.dibujar(g);
            r.y=getHeight()-r.h;
            r.dibujar(g);
            dibujarMuro(g);
            g.setColor( Color.BLUE); 
            g.drawString("Puntuacion: "+puntuacion, 340, 15);
         }else if(grafico.equals("finalizado")){                    
            g.setColor( Color.RED);        
            g.fillRect(200,150, 300, 25);
            g.setColor( Color.BLACK );        
            g.setFont( new Font( "Tahoma", Font.BOLD, 26 ) );
            g.drawString("::..GAMER OVER..::", 235,150 );
        }else if(grafico.equals("gano")){                    
            g.setColor( Color.ORANGE);        
            g.fillRect(200,150, 300, 25);
            g.setColor( Color.BLUE );        
            g.setFont( new Font( "Tahoma", Font.BOLD, 26 ) );
            g.drawString("::..USTED HA GANADO..::", 235,150 );
        }
    }
    
   
    
    public Ladrillo[][] generarMuro(int nl,int nf,int w, int h){
        
        Ladrillo[][] m=new Ladrillo[nf][];
        for (int i = 0; i < nf; i++) {
            m[i]=new Ladrillo[nl-i];
        }
        //[698, 458]
        int x0=(698-nl*w)/2;
        int y0=75;
        for (int i = 0; i < m.length; i++) {
            int x=x0+i*w/2;
            for (int j = 0; j < m[i].length; j++) {
                m[i][j]=new Ladrillo(x, y0, w, h, Color.ORANGE);
                x+=w+5;
            }        
            y0+=h+5;
        }
        return m;
    }
    
    public void dibujarMuro(Graphics g){
        p.y+=p.dy;      

        for (int i = 0; i < muro.length; i++) {
            for (int j = 0; j < muro[i].length; j++) {                
                if(puntuacion==390){
                    grafico="gano";
                    repaint();
                    hilo.stop();   
                } 
                if(muro[i][j].intersects(p.getRectangle())){
                   p.dy=-p.dy; 
                   puntuacion=puntuacion+10;
                   repaint();
                   muro[i][j]= new Ladrillo(0, 0, 0, 0, null);                    
                }
                muro[i][j].dibujar(g);

            }
        }
    }
    

    
    @Override
    public void run() {
        boolean juego=true;
        while (juego!=false) {            
            p.x+=p.dx;
            p.y+=p.dy;      
            if( p.x<=0 ||  p.x+p.w>=getWidth()){
                p.dx=-p.dx; 
            }
            
            if(p.y<=0){
               p.dy=-p.dy;
            }
            
            
            if(p.getRectangle().intersects(r.getRectangle())){
                p.dy=-p.dy; 
            }
            
            if(p.y>458){
                grafico="finalizado";
                repaint();
                hilo.stop();
            }
            
            repaint();
            try {
                Thread.sleep(50);
            } catch (InterruptedException ex) {
            }
           
        }
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
